{"name":"Verify Saving and Deleting an author","description":"Location - features/author.feature:3","descriptionHtml":"Location - features/author.feature:3","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"403 Forbidden","trace":"C:/Ruby27-x64/lib/ruby/gems/2.7.0/gems/rest-client-2.1.0-x64-mingw32/lib/restclient/abstract_response.rb:249:in `exception_with_response'\nC:/Ruby27-x64/lib/ruby/gems/2.7.0/gems/rest-client-2.1.0-x64-mingw32/lib/restclient/abstract_response.rb:129:in `return!'\nC:/Ruby27-x64/lib/ruby/gems/2.7.0/gems/rest-client-2.1.0-x64-mingw32/lib/restclient/request.rb:836:in `process_result'\nC:/Ruby27-x64/lib/ruby/gems/2.7.0/gems/rest-client-2.1.0-x64-mingw32/lib/restclient/request.rb:743:in `block in transmit'\nC:/Ruby27-x64/lib/ruby/2.7.0/net/http.rb:933:in `start'\nC:/Ruby27-x64/lib/ruby/gems/2.7.0/gems/rest-client-2.1.0-x64-mingw32/lib/restclient/request.rb:727:in `transmit'\nC:/Ruby27-x64/lib/ruby/gems/2.7.0/gems/rest-client-2.1.0-x64-mingw32/lib/restclient/request.rb:163:in `execute'\nC:/Ruby27-x64/lib/ruby/gems/2.7.0/gems/rest-client-2.1.0-x64-mingw32/lib/restclient/request.rb:63:in `execute'\nC:/Ruby27-x64/lib/ruby/gems/2.7.0/gems/rest-client-2.1.0-x64-mingw32/lib/restclient.rb:82:in `delete'\nC:/Z_RubyProjects/test_cucumber_restclient/restapi/client/api_client.rb:38:in `delete_request'\nC:/Z_RubyProjects/test_cucumber_restclient/restapi/service/author_service.rb:14:in `deleteAuthor'\nC:/Z_RubyProjects/test_cucumber_restclient/features/step_definitions/author_steps.rb:35:in `\"I should deleted the saved author and check whether it was deleted successfully\"'\nfeatures/author.feature:7:in `I should deleted the saved author and check whether it was deleted successfully'"},"stage":"finished","steps":[{"name":"Given I have to log in and get the token to proceed with authors","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1604656044341,"stop":1604656044497},{"name":"When I get the list of existing authors and generate the id that does not exist","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1604656044497,"stop":1604656044528},{"name":"Then I should save a new author with non-existing id and check whether it was saved successfully","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1604656044528,"stop":1604656046058},{"name":"And I should deleted the saved author and check whether it was deleted successfully","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1604656046058,"stop":1604656046138}],"attachments":[],"parameters":[],"uuid":"ff018970-0242-0139-ba9a-74390912b231","historyId":"bbe094bb1a5bb8b151d269fd3f5c4f8b","fullName":"AuthorTest: Verify Saving and Deleting an author","labels":[{"name":"framework","value":"cucumber"},{"name":"feature","value":"AuthorTest"},{"name":"package","value":"features"},{"name":"suite","value":"AuthorTest"},{"name":"story","value":"Verify Saving and Deleting an author"},{"name":"testClass","value":"author"},{"name":"thread","value":51340},{"name":"host","value":"EPUALVIW060E"},{"name":"language","value":"ruby"}],"links":[],"start":1604656044189,"stop":1604656046138}